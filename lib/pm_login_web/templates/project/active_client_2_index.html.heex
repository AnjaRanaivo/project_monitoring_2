<!--<h3><i class="bi bi-kanban"></i> Les projets</h3>-->

<style>
  th, td {
    padding: 0.5rem 0.75rem !important;
  }

  th {
    cursor: pointer !important;
  }

  .table-sortable th {
  cursor: pointer;
}

.table-sortable .th-sort-asc::after {
  content: "\25b4";
}

.table-sortable .th-sort-desc::after {
  content: "\25be";
}

.table-sortable .th-sort-asc::after,
.table-sortable .th-sort-desc::after {
  margin-left: 5px;
}

.table-sortable .th-sort-asc,
.table-sortable .th-sort-desc {
  background: rgba(0, 0, 0, 0.1);
}

</style>

<div class="responsive-customer-request">

      <div class="card-info" style="max-width: 750px; cursor: pointer; display: flex; align-items: center;">
        <button ><span class="material-icons">
          insert_chart
        </span>Mes projets</button>
        <button style="margin-left: 20px"><span class="material-icons">
          receipt_long
        </span>Mes demandes envoyées</button>
        <a id="" title="Faire une requête" phx-click="form-on-new"
          style="
          margin-left: 10rem;
          background: #16a085;
          padding: 1rem 1.25rem;
          color: #fff;
          display: flex;
          align-items: center;
          gap: 1rem;"
        >
          <i class="bi bi-pencil-square" style="font-size: 2rem; align-items: center;"></i>
          Nouveau Projet
        </a>
      </div>
      <div style="">
        <div class="button-project-list" style="display: flex;margin-top:30px ">

          <form phx-change="search-project" style="margin-bottom: -2rem;">
            <div class="project-search">
              <i class="bi bi-search" style="position: relative;top: 0.2rem;left: 21rem;"></i>
              
              <input type="text" name="project_search" id="projectSearch" placeholder="Rechercher un projet" style="width: 22rem;">
            </div>
          </form>

          <form phx-change="status-project" style="margin-bottom: -2rem;">
            <select id="project_status_id" name="status_id" style="width: -moz-available;
            margin-left: 2rem;
            height: 3.8rem;">
              <option value="0">Tout</option>
              <option value="1">A faire</option>
              <option value="2">En blocage</option>
              <option value="3">En cours</option>
              <option value="4">En contrôle</option>
              <option value="5">Achevée(s)</option>
            </select>
          </form>
        </div>
  
  
       
      </div>
     

</div>
        <table id="tb-auth" class="table-sortable" style="margin-top: 50px; font-size: 13px;">
          <thead>
            <tr>
              <th>Nom</th>
              <th>Description</th>
              <th>Prog.</th>
              <th>Nouvelle demande</th>
            </tr>
          </thead>
          <tbody>
            <%= for project <- @projects do %>
              <tr style={"background: #{
                case project.status_id do
                  1 -> ""
                  2 -> "#e74c3c"
                  3 -> "#f1c40f91"
                  4 -> "#be5e0aad"
                  _ -> "#1abc9c"
                end
              }"}>
                <td>
                  <%= "#{project.title}" %>
                </td>
                <td>
                  <%= project.description %>
                </td>
                <td>
                  <%= project.progression %> %
                </td>
                <td>
                 <a id="" title="Faire une requête" phx-click="form-on" phx-value-title={project.title} 
                  style="
                  background: #2980B9;
                  padding: 1rem 1.25rem;
                  color: #fff;
                  display: flex;
                  align-items: center;
                  gap: 1rem;
                  width:45px;
                  margin-left:30px;
                 "
                  
                >
                  <i class="bi bi-pencil-square" style="font-size: 2rem; align-items: center;"></i>
                </a>
                </td>
              </tr>
              <% end %>
          </tbody>
        </table>
    

     <div class="request__form__container" style={"visibility: #{if @display_form, do: 'visible' , else: 'hidden' };
    opacity: #{ if @display_form, do: '1 !important' , else: '0' }; display: #{ if @display_form, do: 'flex !important' , else: 'none' };"}>
    <div id="the_request_form" class="basecontents__without__radius request__form">
      <div class="column">
        <a class="form__close" title="Fermer" phx-click="form-off"><i class="bi bi-x"></i></a>
        <h2><i class="bi bi-pencil-square"></i> Faire une requête</h2>
        <div class="request__form__content">
          <.form let={f} for={@changeset} phx-change="change-request" phx-submit="send-request">

            <label for="title">
              <h3>Titre</h3>
            </label>
            <%= text_input f, :title %>
            <%= error_tag f, :title %>
            <label for="content">
              <h3>Contenu</h3>
            </label>
            <%= textarea f, :content, style: "max-width: auto; resize: none;" %>
            <%= error_tag f, :content %>
            <label for="title">
              <h3>Nom du projet</h3>
            </label>
            <input type="text" id="name" name="name" value={@project_title} disabled="true">
            <%= error_tag f, :title %>
            <label class="btn btn-lg btn-primary file_input_btn">
              <%=  live_file_input(@uploads.file, class: "file_inputs") %>
              <i class="bi bi-upload"></i>
              Charger fichiers
            </label>
            <%= for {_ref, msg} <- @uploads.file.errors do %>
            <%= if Phoenix.Naming.humanize(msg)=="Too many files" do %>
            <p class="alert alert-danger"><%= "Nombre de fichiers max : 5." %></p>
            <% end %>
            <% end %>


            <%= for entry <- @uploads.file.entries do %>
            <div class="row">
              <div class="column">

                <%= if Path.extname(entry.client_name)==".jpg" or Path.extname(entry.client_name)==".png" or Path.extname(entry.client_name)==".jpeg" do %>
                <%= live_img_preview entry, height: 50 %>
                <% else %>
                <p class="file__name__upload"><%= entry.client_name %></p>
                <% end %>

              </div>
              <div class="column">
                <progress value={entry.progress } max="100" />
              </div>
              <div class="column">
                <a href="#" phx-click="cancel-entry" phx-value-ref={entry.ref}>annuler</a>
              </div>
            </div>
            <% end %>
            <div class="column">
              <button type="submit" style="float: right;" class="bt__com__form"><span
                  class="material-icons bt__com__form__ico">send</span></button>
            </div>

          </.form>

        </div>

      </div>
    </div>

  </div>

<script>
  function sortTableByColumn(table, column, asc = true) {
    const dirModifier = asc ? 1 : -1;
    const tBody = table.tBodies[0];

    console.log(tBody)
    const rows = Array.from(tBody.querySelectorAll("tr"));

    // Sort each row
    const sortedRows = rows.sort((a, b) => {
        const aColText = a.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim();
        const bColText = b.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim();

        return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);
    });

    // Remove all existing TRs from the table
    while (tBody.firstChild) {
        tBody.removeChild(tBody.firstChild);
    }

    // Re-add the newly sorted rows
    tBody.append(...sortedRows);

    // Remember how the column is currently sorted
    table.querySelectorAll("th").forEach(th => th.classList.remove("th-sort-asc", "th-sort-desc"));
    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-asc", asc);
    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-desc", !asc);
}

document.querySelectorAll(".table-sortable th").forEach(headerCell => {
    headerCell.addEventListener("click", () => {
        const tableElement = headerCell.parentElement.parentElement.parentElement;
        const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);
        const currentIsAscending = headerCell.classList.contains("th-sort-asc");

        sortTableByColumn(tableElement, headerIndex, !currentIsAscending);
    });
});

</script>